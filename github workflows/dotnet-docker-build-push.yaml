name: Docker Build And Push

on:
  workflow_call:
    inputs:
      SERVICE_NAME:
        required: true
        type: string
        default: "exmaple-service"
      SERVICE_NAME_APPEND:
        required: false
        type: string
        default: ""
        description: "Appends to a service name, useful for special cases like web-qa"
      DOCKER_BUILD_PATH:
        required: true
        type: string
        default: "src/dotnet/"
      DOCKERFILE:
        required: false
        type: string
    secrets:
      NUGET_GITHUB_PACKAGE_TOKEN:
        required: true
      NUGET_GITHUB_PACKAGE_USER:
        required: true
      NUGET_GITHUB_URL:
        required: true
      PROJECT_ID:
        required: true
      GCP_SA_KEY:
        required: true
      HANGFIRENUGETPASS:
        required: false
env:
  DOCKER_BUILDKIT: 1

jobs:
  DOCKER_BUILD_PUSH:
    runs-on: ubuntu-22.04
    outputs:
      image: ${{ steps.image.outputs.image }}
    steps:
      - uses: actions/checkout@v3

      - name: Google cloud auth login
        uses: google-github-actions/auth@v0
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}

      - name: "Set up Cloud SDK"
        uses: "google-github-actions/setup-gcloud@v0"

      - run: |
          gcloud auth configure-docker -q

      - name: Preparing image name
        id: image
        run: |
          export image=eu.gcr.io/${{secrets.PROJECT_ID}}/${{inputs.SERVICE_NAME}}${{inputs.SERVICE_NAME_APPEND}}:$GITHUB_RUN_NUMBER-${GITHUB_SHA::8}
          echo "::set-output name=image::${image}"

      - name: Docker build
        run: |-
          echo ${{ steps.image.outputs.image }}
          cd ${{inputs.DOCKER_BUILD_PATH}}
          DOCKERFILE="${{inputs.DOCKERFILE}}"
          if [ -z "$DOCKERFILE" ]; then
            # Dockerfile input option is empty
            DOCKERFILE="${{inputs.SERVICE_NAME}}/Dockerfile"
          fi
          docker build --cache-from eu.gcr.io/${{secrets.PROJECT_ID}}/${{inputs.SERVICE_NAME}}${{inputs.SERVICE_NAME_APPEND}} -t ${{ steps.image.outputs.image }} -f $DOCKERFILE . \
            --build-arg NUGET_GITHUB_PACKAGE_TOKEN=${{ secrets.NUGET_GITHUB_PACKAGE_TOKEN }} \
            --build-arg NUGET_GITHUB_URL=${{ secrets.NUGET_GITHUB_URL }}   \
            --build-arg BUILDKIT_INLINE_CACHE=1 \
            --build-arg NUGET_GITHUB_PACKAGE_USER=${{ secrets.NUGET_GITHUB_PACKAGE_USER }} \
            --build-arg HANGFIRENUGETPASS=${{ secrets.HANGFIRENUGETPASS }}

      - name: Docker push
        run: |-
          docker push ${{ steps.image.outputs.image }}
          echo ${{ steps.image.outputs.image }} > dockerimage.txt

      - name: Upload image artifact
        uses: actions/upload-artifact@v3
        with:
          name: dockerimages-${{ secrets.PROJECT_ID }}${{inputs.SERVICE_NAME_APPEND}}
          path: dockerimage.txt
